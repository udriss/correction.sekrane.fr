model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  
  // Relation many-to-many avec Fragment
  fragments FragmentsOnCategories[]

  @@map("categories")
}

model Fragment {
  id         Int       @id @default(autoincrement())
  content    String    @db.Text
  order      Int       @default(0)
  activityId Int       @map("activity_id")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  
  // Relation avec Activity
  activity   Activity  @relation(fields: [activityId], references: [id], onDelete: Cascade)
  
  // Relation many-to-many avec Category
  categories FragmentsOnCategories[]

  @@map("fragments")
}

// Table de jointure pour la relation many-to-many entre Fragment et Category
model FragmentsOnCategories {
  fragmentId Int      @map("fragment_id")
  categoryId Int      @map("category_id")
  fragment   Fragment @relation(fields: [fragmentId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([fragmentId, categoryId])
  @@map("fragments_categories")
}

model Correction {
  id                      Int       @id @default(autoincrement())
  content                 String?   @db.Text
  student_id              Int?
  class_id                Int?
  activity_id             Int
  teacher_id              Int
  grade                   Float?
  experimental_points_earned Float?
  theoretical_points_earned Float?
  status                  String?   @default("pending")
  submission_date         DateTime?
  sub_class               String?
  created_at              DateTime  @default(now())
  updated_at              DateTime  @updatedAt
  
  student                 Student?  @relation(fields: [student_id], references: [id])
  class                   Class?    @relation(fields: [class_id], references: [id])
  activity                Activity  @relation(fields: [activity_id], references: [id])
  teacher                 User      @relation(fields: [teacher_id], references: [id])
  
  @@index([student_id])
  @@index([class_id])
  @@index([activity_id])
  @@index([teacher_id])
}